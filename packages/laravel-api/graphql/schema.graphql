"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    users: [User!]!
        @middleware(checks: ["auth:api", "verified"])
        @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    me: User @auth
}

type Mutation {
    login(input: LoginInput @spread): AuthPayload!
        @field(
            resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Login@resolve"
        )
    refreshToken(input: RefreshTokenInput @spread): RefreshTokenPayload!
        @field(
            resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\RefreshToken@resolve"
        )
    logout: LogoutResponse!
        @field(
            resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Logout@resolve"
        )
    forgotPassword(
        input: ForgotPasswordInput! @spread
    ): ForgotPasswordResponse!
        @field(
            resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\ForgotPassword@resolve"
        )
    updateForgottenPassword(
        input: NewPasswordWithCodeInput @spread
    ): ForgotPasswordResponse!
        @field(
            resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\ResetPassword@resolve"
        )
    register(input: RegisterInput @spread): RegisterResponse!
        @field(
            resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Register@resolve"
        )
    socialLogin(input: SocialLoginInput! @spread): AuthPayload!
        @field(
            resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\SocialLogin@resolve"
        )
    verifyEmail(input: VerifyEmailInput! @spread): AuthPayload!
        @field(
            resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\VerifyEmail@resolve"
        )
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}
